#include <stdio.h>

#define MAXN 1005

int temp[MAXN];

long long merge_sort(int a[], int left, int right) {
    if (right - left <= 1) return 0;

    int mid = (left + right) / 2;
    long long inv = 0;

    inv += merge_sort(a, left, mid);
    inv += merge_sort(a, mid, right);

    int i = left, j = mid, k = left;

    while (i < mid && j < right) {
        if (a[i] <= a[j]) {
            temp[k++] = a[i++];
        } else {
            temp[k++] = a[j++];
            inv += mid - i;
        }
    }

    while (i < mid) temp[k++] = a[i++];
    while (j < right) temp[k++] = a[j++];
    for (i = left; i < right; ++i) a[i] = temp[i];

    return inv;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n, a[MAXN];
        scanf("%d", &n);
        for (int i = 0; i < n; i++)
            scanf("%d", &a[i]);

        long long crossings = merge_sort(a, 0, n);
        printf("%lld\n", crossings);
    }

    return 0;
}

