#include <stdio.h>
#include <limits.h>

#define MAXN 5005
#define max(a, b) ((a) > (b) ? (a) : (b))

int a[MAXN];
int max_sub_sum[MAXN];

void compute_max_subarray_sums(int n) {
    for (int i = 0; i <= n; ++i)
        max_sub_sum[i] = INT_MIN;
    max_sub_sum[0] = 0;

    for (int start = 0; start < n; ++start) {
        int sum = 0;
        for (int end = start; end < n; ++end) {
            sum += a[end];
            int len = end - start + 1;
            if (sum > max_sub_sum[len])
                max_sub_sum[len] = sum;
        }
    }
}

void solve_query(int n, int x) {
    compute_max_subarray_sums(n);
    for (int k = 0; k <= n; ++k) {
        int answer = 0;
        for (int len = 0; len <= n; ++len) {
            int used = (k < len) ? k : len;
            int current = max_sub_sum[len] + used * x;
            if (current > answer)
                answer = current;
        }
        printf("%d%c", answer, k == n ? '\n' : ' ');
    }
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n, x;
        scanf("%d %d", &n, &x);
        for (int i = 0; i < n; ++i)
            scanf("%d", &a[i]);
        solve_query(n, x);
    }
    return 0;
}

