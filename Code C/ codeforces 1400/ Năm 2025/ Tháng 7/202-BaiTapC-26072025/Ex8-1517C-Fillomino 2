#include <stdio.h>

#define MAX 505

int n, p[MAX];
int grid[MAX][MAX];
int dx[2] = {0, 1};
int dy[2] = {-1, 0};
int filled;

void dfs(int x, int y, int val) {
    if (filled == val) return;

    for (int d = 0; d < 2; d++) {
        int nx = x + dx[d];
        int ny = y + dy[d];

        if (nx >= 1 && ny >= 1 && nx <= n && ny <= nx && grid[nx][ny] == 0) {
            grid[nx][ny] = val;
            filled++;
            dfs(nx, ny, val);
            if (filled == val) return;
        }
    }
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &p[i]);

    for (int i = 1; i <= n; i++) {
        int val = p[i];
        int x = i, y = i;
        grid[x][y] = val;
        filled = 1;
        dfs(x, y, val);

        if (filled < val) {
            printf("-1\n");
            return 0;
        }
    }

    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            printf("%d", grid[i][j]);
            if (j < i) printf(" ");
        }
        printf("\n");
    }

    return 0;
}

