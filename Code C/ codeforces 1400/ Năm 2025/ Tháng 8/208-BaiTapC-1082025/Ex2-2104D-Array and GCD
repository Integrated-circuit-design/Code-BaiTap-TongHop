#include <stdio.h>
#include <stdlib.h>

int gcd(int a, int b) {
    while (b) {
        int tmp = a % b;
        a = b;
        b = tmp;
    }
    return a;
}

int main() {
    int t;
    scanf("%d", &t);
    
    while (t--) {
        int n;
        scanf("%d", &n);
        
        int* a = (int*)malloc(n * sizeof(int));
        for (int i = 0; i < n; ++i) {
            scanf("%d", &a[i]);
        }

        if (n == 1) {
            printf("0\n");
            free(a);
            continue;
        }

        int overall_gcd = a[0];
        for (int i = 1; i < n; ++i) {
            overall_gcd = gcd(overall_gcd, a[i]);
        }

        if (overall_gcd == 1) {
            printf("0\n");
            free(a);
            continue;
        }

        int min_remove = n;
        for (int i = 0; i < n; ++i) {
            int current_gcd = a[i];
            for (int j = 0; j < n; ++j) {
                if (i == j) continue;
                current_gcd = gcd(current_gcd, a[j]);
                if (current_gcd == 1) break;
            }
            if (current_gcd == 1) {
                int remove = n - 2;
                if (remove < min_remove)
                    min_remove = remove;
            }
        }

        if (min_remove < n)
            printf("%d\n", min_remove);
        else
            printf("%d\n", n - 1);

        free(a);
    }

    return 0;
}

