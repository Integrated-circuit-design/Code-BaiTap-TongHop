#include <stdio.h>

#define MAXN 200005

int a[MAXN], b[MAXN];
int op1[MAXN], op2[MAXN];

void swap(int *x, int *y) {
    int tmp = *x;
    *x = *y;
    *y = tmp;
}

void reverse(int *arr, int n) {
    for (int i = 0; i < n / 2; i++) {
        swap(&arr[i], &arr[n - 1 - i]);
    }
}

int can_match(int *a, int *b, int n) {
    for (int i = 0; i < n / 2; i++) {
        int x1 = a[i], x2 = a[n - 1 - i];
        int y1 = b[i], y2 = b[n - 1 - i];
        if (!((x1 == y1 && x2 == y2) || (x1 == y2 && x2 == y1))) return 0;
    }
    if (n % 2 == 1 && a[n / 2] != b[n / 2]) return 0;
    return 1;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        for (int i = 0; i < n; i++) scanf("%d", &a[i]);
        for (int i = 0; i < n; i++) scanf("%d", &b[i]);

        reverse(b, n);

        if (!can_match(a, b, n)) {
            printf("-1\n");
            continue;
        }

        int cnt = 0;
        for (int i = 0; i < n; i++) {
            if (a[i] == b[i]) continue;

            int j = i + 1;
            while (j < n && a[j] != b[i]) j++;

            while (j > i) {
                swap(&a[j], &a[j - 1]);
                swap(&b[j], &b[j - 1]);
                op1[cnt] = j;
                op2[cnt] = j + 1;
                cnt++;
                j--;
            }
        }

        printf("%d\n", cnt);
        for (int i = 0; i < cnt; i++) {
            printf("%d %d\n", op1[i], op2[i]);
        }
    }
    return 0;
}

