#include <stdio.h>
#include <stdlib.h>

#define MAXN 300005

int a[MAXN];

void swap(int *x, int *y) {
    int t = *x;
    *x = *y;
    *y = t;
}

int partition(int arr[], int l, int r) {
    int pivot = arr[r];
    int i = l;
    for (int j = l; j < r; j++) {
        if (arr[j] < pivot) {
            swap(&arr[i], &arr[j]);
            i++;
        }
    }
    swap(&arr[i], &arr[r]);
    return i;
}

int quickselect(int arr[], int l, int r, int k) {
    while (l <= r) {
        int pi = partition(arr, l, r);
        if (pi == k) return arr[pi];
        else if (pi < k) l = pi + 1;
        else r = pi - 1;
    }
    return -1;
}

int main() {
    int n;
    scanf("%d", &n);
    
    for (int i = 0; i < n; ++i)
        scanf("%d", &a[i]);

    int k = (n - 1) / 2;
    int median = quickselect(a, 0, n - 1, k);

    printf("%d\n", median);
    return 0;
}

