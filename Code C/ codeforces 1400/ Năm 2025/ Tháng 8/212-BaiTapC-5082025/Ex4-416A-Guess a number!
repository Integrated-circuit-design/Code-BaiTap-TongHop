#include <stdio.h>
#include <string.h>
#include <limits.h>

#define MAX_Q 10005
#define MIN_Y -2000000000
#define MAX_Y  2000000000

typedef enum {
    GT,
    GE,
    LT,
    LE
} Operator;

Operator parse_operator(const char *s) {
    if (strcmp(s, ">") == 0) return GT;
    if (strcmp(s, ">=") == 0) return GE;
    if (strcmp(s, "<") == 0) return LT;
    return LE;
}

void update_bounds(Operator op, int x, char answer, int *low, int *high) {
    if (answer == 'Y') {
        if (op == GT && *low < x + 1) *low = x + 1;
        if (op == GE && *low < x)     *low = x;
        if (op == LT && *high > x - 1) *high = x - 1;
        if (op == LE && *high > x)     *high = x;
    } else {
        if (op == GT && *high > x)     *high = x;
        if (op == GE && *high > x - 1) *high = x - 1;
        if (op == LT && *low < x)     *low = x;
        if (op == LE && *low < x + 1) *low = x + 1;
    }
}

int main() {
    int n;
    scanf("%d", &n);

    int low = MIN_Y, high = MAX_Y;

    char sign[3], ans;
    int val;

    for (int i = 0; i < n; i++) {
        scanf("%s %d %c", sign, &val, &ans);
        Operator op = parse_operator(sign);
        update_bounds(op, val, ans, &low, &high);
    }

    if (low > high)
        puts("Impossible");
    else
        printf("%d\n", low);

    return 0;
}

