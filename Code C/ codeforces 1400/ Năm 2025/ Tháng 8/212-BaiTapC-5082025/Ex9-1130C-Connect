#include <stdio.h>
#include <string.h>

#define MAXN 55
#define MAXCELLS (MAXN * MAXN)
#define INF 1000000000

int n;
int sr, sc, tr, tc;
char g[MAXN][MAXN];
int vis1[MAXN][MAXN], vis2[MAXN][MAXN];
int qx1[MAXCELLS], qy1[MAXCELLS], qx2[MAXCELLS], qy2[MAXCELLS];
int cnt1 = 0, cnt2 = 0;

int dirs[4][2] = {
    {1, 0}, {-1, 0}, {0, 1}, {0, -1}
};

void bfs(int sx, int sy, int vis[MAXN][MAXN], int qx[MAXCELLS], int qy[MAXCELLS], int *cnt) {
    int head = 0, tail = 0;
    qx[tail] = sx;
    qy[tail] = sy;
    tail++;
    vis[sx][sy] = 1;

    while (head < tail) {
        int x = qx[head];
        int y = qy[head];
        head++;
        qx[*cnt] = x;
        qy[*cnt] = y;
        (*cnt)++;

        for (int d = 0; d < 4; ++d) {
            int nx = x + dirs[d][0];
            int ny = y + dirs[d][1];
            if (nx < 0 || nx >= n || ny < 0 || ny >= n) continue;
            if (g[nx][ny] == '1') continue;
            if (vis[nx][ny]) continue;
            vis[nx][ny] = 1;
            qx[tail] = nx;
            qy[tail] = ny;
            tail++;
        }
    }
}

int main() {
    scanf("%d", &n);
    scanf("%d %d", &sr, &sc);
    scanf("%d %d", &tr, &tc);
    sr--; sc--;
    tr--; tc--;
    for (int i = 0; i < n; ++i) {
        scanf("%s", g[i]);
    }

    bfs(sr, sc, vis1, qx1, qy1, &cnt1);
    if (vis1[tr][tc]) {
        printf("0\n");
        return 0;
    }

    bfs(tr, tc, vis2, qx2, qy2, &cnt2);

    int best = INF;
    for (int i = 0; i < cnt1; ++i) {
        int x1 = qx1[i];
        int y1 = qy1[i];
        for (int j = 0; j < cnt2; ++j) {
            int x2 = qx2[j];
            int y2 = qy2[j];
            int dr = x1 - x2;
            int dc = y1 - y2;
            int cost = dr * dr + dc * dc;
            if (cost < best) best = cost;
        }
    }

    printf("%d\n", best);
    return 0;
}

