#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int to;
    int cost;
    struct Node* next;
} Node;

Node* graph[105];
int visited[105];
int n;

void add_edge(int u, int v, int cost) {
    Node* node = (Node*)malloc(sizeof(Node));
    node->to = v; node->cost = cost;
    node->next = graph[u];
    graph[u] = node;
}

int dfs(int u) {
    visited[u] = 1;
    int max_cost = 0;
    for (Node* p = graph[u]; p != NULL; p = p->next) {
        int v = p->to, c = p->cost;
        if (!visited[v]) {
            int cur = dfs(v) + c;
            if (cur > max_cost) max_cost = cur;
        }
    }
    visited[u] = 0;
    return max_cost;
}

int main() {
    scanf("%d", &n);
    for (int i = 0; i < n; i++) graph[i] = NULL;

    for (int i = 0; i < n-1; i++) {
        int u, v, c;
        scanf("%d%d%d", &u, &v, &c);
        add_edge(u, v, c);
        add_edge(v, u, c);
    }

    printf("%d\n", dfs(0));

    for (int i = 0; i < n; i++) {
        Node* p = graph[i];
        while (p) {
            Node* tmp = p;
            p = p->next;
            free(tmp);
        }
    }

    return 0;
}

