#include <stdio.h>

#define MAX 1000

void distribute_work(int n, int k, long long a[], int b[], int c[]) {
    int i;
    long long needed = k;

    for (i = 0; i < n; i++) {
        long long max_units = a[i] / b[i];
        if (max_units > needed) max_units = needed;

        c[i] = (int)max_units;
        needed -= max_units;

        if (needed == 0) {
            i++;
            break;
        }
    }

    if (needed > 0) {
        for (int j = 0; j < n; j++) {
            c[j] = 0;
        }
    } else {
        for (; i < n; i++) {
            c[i] = 0;
        }
    }
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);

    long long a[MAX];
    int b[MAX];
    int c[MAX];

    for (int i = 0; i < n; i++) scanf("%lld", &a[i]);
    for (int i = 0; i < n; i++) scanf("%d", &b[i]);

    distribute_work(n, k, a, b, c);

    for (int i = 0; i < n; i++) {
        printf("%d", c[i]);
        if (i != n - 1) printf(" ");
    }
    printf("\n");

    return 0;
}

