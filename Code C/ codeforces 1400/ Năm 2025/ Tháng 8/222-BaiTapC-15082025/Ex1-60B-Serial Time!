#include <stdio.h>

#define MAX 10

int k, n, m;
char plate[MAX][MAX][MAX];
int visited[MAX][MAX][MAX];

int dz[6] = {1, -1, 0, 0, 0, 0};
int dx[6] = {0, 0, 1, -1, 0, 0};
int dy[6] = {0, 0, 0, 0, 1, -1};

int dfs(int z, int x, int y) {
    if (z < 0 || z >= k || x < 0 || x >= n || y < 0 || y >= m) return 0;
    if (plate[z][x][y] == '#' || visited[z][x][y]) return 0;

    visited[z][x][y] = 1;
    int count = 1;

    for (int d = 0; d < 6; d++) {
        count += dfs(z + dz[d], x + dx[d], y + dy[d]);
    }

    return count;
}

int main() {
    scanf("%d %d %d", &k, &n, &m);
    getchar();

    for (int z = 0; z < k; z++) {
        for (int x = 0; x < n; x++) {
            for (int y = 0; y < m; y++) {
                plate[z][x][y] = getchar();
            }
            getchar();
        }
        if (z != k - 1) getchar();
    }

    int sx, sy;
    scanf("%d %d", &sx, &sy);
    sx--; sy--;

    int filled = dfs(0, sx, sy);
    printf("%d\n", filled);
    return 0;
}

