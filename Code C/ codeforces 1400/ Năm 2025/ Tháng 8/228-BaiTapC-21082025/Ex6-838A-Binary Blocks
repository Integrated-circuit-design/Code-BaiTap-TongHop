#include <stdio.h>

#define MAXN 2505

int n, m;
char grid[MAXN][MAXN];

int toggles_block(int i_start, int j_start, int k) {
    int count0 = 0, count1 = 0;

    for (int i = i_start; i < i_start + k; i++) {
        for (int j = j_start; j < j_start + k; j++) {
            char val = '0';
            if (i < n && j < m) val = grid[i][j];
            if (val == '0') count0++;
            else count1++;
        }
    }

    return (count0 < count1) ? count0 : count1;
}

int min(int a, int b) { return a < b ? a : b; }

int main() {
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; i++) {
        scanf("%s", grid[i]);
    }

    int ans = n * m;
    int limit = n < m ? n : m;

    for (int k = 2; k <= limit; k++) {
        int padded_n = ((n + k - 1) / k) * k;
        int padded_m = ((m + k - 1) / k) * k;

        int total_toggles = 0;

        for (int i = 0; i < padded_n; i += k) {
            for (int j = 0; j < padded_m; j += k) {
                total_toggles += toggles_block(i, j, k);
            }
        }

        ans = min(ans, total_toggles);
    }

    printf("%d\n", ans);
    return 0;
}

