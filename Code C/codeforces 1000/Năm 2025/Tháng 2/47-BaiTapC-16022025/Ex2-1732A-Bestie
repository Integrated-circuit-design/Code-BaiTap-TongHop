#include <stdio.h>

int gcd(int a, int b) {
    return (b == 0) ? a : gcd(b, a % b);
}

int array_gcd(int arr[], int n) {
    int result = arr[0];
    for (int i = 1; i < n; i++) {
        result = gcd(result, arr[i]);
    }
    return result;
}

int find_min_cost(int n, int a[]) {
    int overall_gcd = array_gcd(a, n);
    if (overall_gcd == 1) return 0;

    int min_cost = n;
    for (int i = n - 1; i >= 0; i--) {
        a[i] = gcd(a[i], i + 1);
        if (array_gcd(a, n) == 1) {
            min_cost = n - i;
            break;
        }
    }

    return min_cost;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n;
        scanf("%d", &n);
        int a[n];

        for (int i = 0; i < n; i++) {
            scanf("%d", &a[i]);
        }

        printf("%d\n", find_min_cost(n, a));
    }

    return 0;
}

