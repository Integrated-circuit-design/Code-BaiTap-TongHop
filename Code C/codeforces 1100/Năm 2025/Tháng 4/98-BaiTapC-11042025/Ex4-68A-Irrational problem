#include <stdio.h>

void swap(int *a, int *b) {
    int tmp = *a;
    *a = *b;
    *b = tmp;
}

int next_permutation(int *arr, int n) {
    int i = n - 2;
    while (i >= 0 && arr[i] > arr[i + 1]) i--;
    if (i < 0) return 0;

    int j = n - 1;
    while (arr[j] < arr[i]) j--;
    swap(&arr[i], &arr[j]);

    for (int l = i + 1, r = n - 1; l < r; l++, r--) {
        swap(&arr[l], &arr[r]);
    }
    return 1;
}

int main() {
    int p[4], a, b;
    scanf("%d %d %d %d %d %d", &p[0], &p[1], &p[2], &p[3], &a, &b);

    for (int i = 0; i < 4 - 1; ++i)
        for (int j = i + 1; j < 4; ++j)
            if (p[i] > p[j])
                swap(&p[i], &p[j]);

    int res = 0;

    for (int x = a; x <= b; ++x) {
        int cnt = 0;

        int perm[4];
        for (int i = 0; i < 4; ++i) perm[i] = p[i];

        do {
            int val = x;
            for (int i = 0; i < 4; ++i) {
                val %= perm[i];
            }
            if (val == x) cnt++;
        } while (next_permutation(perm, 4));

        if (cnt >= 7) res++;
    }

    printf("%d\n", res);
    return 0;
}

