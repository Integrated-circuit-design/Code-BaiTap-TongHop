#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_N 200000

long long prefix_sum[MAX_N + 1];

void solve() {
    int n;
    scanf("%d", &n);
    char s[n + 1];
    scanf("%s", s);

    long long base_value = 0;
    long long changes[MAX_N];
    int change_count = 0;

    for (int i = 0; i < n; i++) {
        if (s[i] == 'L') {
            base_value += i;
            if (n - 1 - i > i) {
                changes[change_count++] = (n - 1 - i) - i;
            }
        } else {
            base_value += (n - 1 - i);
            if (i > (n - 1 - i)) {
                changes[change_count++] = i - (n - 1 - i);
            }
        }
    }

    for (int i = 0; i < change_count - 1; i++) {
        for (int j = i + 1; j < change_count; j++) {
            if (changes[i] < changes[j]) {
                long long temp = changes[i];
                changes[i] = changes[j];
                changes[j] = temp;
            }
        }
    }

    long long max_value = base_value;
    int j = 0;
    for (int k = 1; k <= n; k++) {
        if (j < change_count) {
            max_value += changes[j++];
        }
        printf("%lld ", max_value);
    }
    printf("\n");
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        solve();
    }
    return 0;
}

