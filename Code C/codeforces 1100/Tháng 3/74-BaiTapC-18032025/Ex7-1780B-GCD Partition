#include <stdio.h>
#include <stdlib.h>

#define MAX_N 200000

typedef long long ll;

ll gcd(ll a, ll b) {
    return b == 0 ? a : gcd(b, a % b);
}

int is_valid_partition(ll a[], int n, ll target) {
    ll sum = 0;
    int parts = 0;
    for (int i = 0; i < n; i++) {
        sum += a[i];
        if (sum == target) {
            parts++;
            sum = 0;
        } else if (sum > target) {
            return 0;
        }
    }
    return sum == 0 ? parts > 1 : 0;
}

void solve() {
    int n;
    scanf("%d", &n);
    
    ll a[n], total_sum = 0;
    for (int i = 0; i < n; i++) {
        scanf("%lld", &a[i]);
        total_sum += a[i];
    }
    
    ll max_gcd = 1;
    for (ll div = 1; div * div <= total_sum; div++) {
        if (total_sum % div == 0) {
            if (is_valid_partition(a, n, div)) {
                max_gcd = (max_gcd > div) ? max_gcd : div;
            }
            if (is_valid_partition(a, n, total_sum / div)) {
                max_gcd = (max_gcd > total_sum / div) ? max_gcd : total_sum / div;
            }
        }
    }
    
    printf("%lld\n", max_gcd);
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        solve();
    }
    return 0;
}

