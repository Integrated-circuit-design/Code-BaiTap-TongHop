#include <stdio.h>

#define MAX_N 2000

int a[MAX_N];

void solve() {
    int n;
    scanf("%d", &n);
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    
    int total_sum = 0;
    for (int i = 0; i < n; i++) {
        total_sum += a[i];
    }
    
    int min_thickness = n;
    
    for (int i = 0, prefix_sum = 0; i < n; i++) {
        prefix_sum += a[i];
        if (total_sum % prefix_sum != 0) continue;
        
        int current_sum = 0, max_length = 0, segment_length = 0;
        int valid = 1;
        
        for (int j = 0; j < n; j++) {
            current_sum += a[j];
            segment_length++;
            
            if (current_sum == prefix_sum) {
                if (segment_length > max_length) {
                    max_length = segment_length;
                }
                segment_length = 0;
                current_sum = 0;
            } else if (current_sum > prefix_sum) {
                valid = 0;
                break;
            }
        }
        
        if (valid && max_length < min_thickness) {
            min_thickness = max_length;
        }
    }
    
    printf("%d\n", min_thickness);
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        solve();
    }
    return 0;
}

