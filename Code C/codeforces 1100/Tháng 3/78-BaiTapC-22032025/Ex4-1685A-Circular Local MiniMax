#include <stdio.h>
#include <stdlib.h>

#define MAX_N 100005

int a[MAX_N], b[MAX_N];

int cmp(const void *x, const void *y) {
    return (*(int *)x - *(int *)y);
}

void solve() {
    int n;
    scanf("%d", &n);

    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    qsort(a, n, sizeof(int), cmp);

    if (a[n / 2] == a[n / 2 - 1]) {
        printf("NO\n");
        return;
    }

    printf("YES\n");

    int mid = (n + 1) / 2;
    int i = 0, j = mid, k = 0;

    while (j < n) {
        b[k++] = a[i++];
        b[k++] = a[j++];
    }

    while (i < mid) {
        b[k++] = a[i++];
    }

    for (int i = 0; i < n; i++) {
        printf("%d ", b[i]);
    }
    printf("\n");
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        solve();
    }
    return 0;
}

