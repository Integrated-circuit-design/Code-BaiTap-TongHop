#include <stdio.h>

#define MAXN 50000

int pos[MAXN + 1][2];
int used[MAXN + 1];

void solve() {
    int n, k;
    scanf("%d %d", &n, &k);

    for (int i = 1; i <= n; i++) {
        pos[i][0] = pos[i][1] = -1;
        used[i] = 0;
    }

    for (int i = 0; i < 2 * n; i++) {
        int x;
        scanf("%d", &x);
        if (pos[x][0] == -1)
            pos[x][0] = i + 1;
        else
            pos[x][1] = i + 1;
    }

    int count = 0;
    int l[2 * k], r[2 * k];

    for (int i = 1; i <= n && count < k; i++) {
        if (used[i] == 0) {
            l[2 * count] = pos[i][0];
            l[2 * count + 1] = pos[i][1];
            used[i] = 1;
            count++;
        }
    }

    count = 0;
    for (int i = 1; i <= n && count < k; i++) {
        if (used[i] == 1) {
            r[2 * count] = pos[i][0];
            r[2 * count + 1] = pos[i][1];
            count++;
        }
    }

    for (int i = 0; i < 2 * k; i++) {
        printf("%d ", l[i]);
    }
    printf("\n");

    for (int i = 0; i < 2 * k; i++) {
        printf("%d ", r[i]);
    }
    printf("\n");
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        solve();
    }

    return 0;
}

