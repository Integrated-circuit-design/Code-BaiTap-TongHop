#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_N 2000

typedef struct {
    int arr[MAX_N + 1];
} State;

State *history[MAX_N + 1];
int freq[MAX_N + 1];

int main() {
    int t;
    scanf("%d", &t);
    
    while (t--) {
        int n;
        scanf("%d", &n);

        history[0] = (State *)malloc(sizeof(State));
        for (int i = 1; i <= n; i++) {
            scanf("%d", &history[0]->arr[i]);
        }

        int steps = 0;
        while (1) {
            memset(freq, 0, sizeof(freq));

            for (int i = 1; i <= n; i++) {
                freq[history[steps]->arr[i]]++;
            }

            history[steps + 1] = (State *)malloc(sizeof(State));
            int unchanged = 1;
            for (int i = 1; i <= n; i++) {
                history[steps + 1]->arr[i] = freq[history[steps]->arr[i]];
                if (history[steps + 1]->arr[i] != history[steps]->arr[i]) {
                    unchanged = 0;
                }
            }

            steps++;

            if (unchanged) break;
        }

        int q;
        scanf("%d", &q);
        
        while (q--) {
            int x, k;
            scanf("%d %d", &x, &k);
            if (k > steps) k = steps;
            printf("%d\n", history[k]->arr[x]);
        }

        for (int i = 0; i <= steps; i++) {
            free(history[i]);
        }
    }
    
    return 0;
}

