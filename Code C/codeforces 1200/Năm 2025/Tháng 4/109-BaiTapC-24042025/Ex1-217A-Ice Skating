#include <stdio.h>

#define MAXN 100

int parent[MAXN];
int x[MAXN], y[MAXN];
int n;

int find(int i) {
    if (parent[i] != i) {
        parent[i] = find(parent[i]);
    }
    return parent[i];
}

void union_sets(int i, int j) {
    int root_i = find(i);
    int root_j = find(j);

    if (root_i != root_j) {
        parent[root_j] = root_i;
    }
}

int main() {
    scanf("%d", &n);

    for (int i = 0; i < n; ++i) {
        scanf("%d %d", &x[i], &y[i]);
        parent[i] = i;
    }

    for (int i = 0; i < n; ++i) {
        for (int j = i + 1; j < n; ++j) {
            if (x[i] == x[j] || y[i] == y[j]) {
                union_sets(i, j);
            }
        }
    }

    int components = 0;
    for (int i = 0; i < n; ++i) {
        if (find(i) == i) {
            components++;
        }
    }

    printf("%d\n", components - 1);

    return 0;
}

