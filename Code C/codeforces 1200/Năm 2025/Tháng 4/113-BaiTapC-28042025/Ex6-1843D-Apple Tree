#include <stdio.h>
#include <stdlib.h>

#define MAXN 200005

int t, n, q;
int tree[MAXN][2];
int size[MAXN];

void init() {
    for (int i = 0; i <= n; i++) {
        tree[i][0] = tree[i][1] = -1;
        size[i] = 0;
    }
}

void add_edge(int u, int v) {
    if (tree[u][0] == -1) {
        tree[u][0] = v;
    } else {
        tree[u][1] = v;
    }
}

int dfs(int node) {
    if (tree[node][0] == -1 && tree[node][1] == -1) {
        size[node] = 1;
        return 1;
    }

    int total_leaves = 0;
    if (tree[node][0] != -1) {
        total_leaves += dfs(tree[node][0]);
    }
    if (tree[node][1] != -1) {
        total_leaves += dfs(tree[node][1]);
    }
    size[node] = total_leaves;
    return total_leaves;
}

int main() {
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        init();

        for (int i = 1; i < n; i++) {
            int u, v;
            scanf("%d %d", &u, &v);
            add_edge(u, v);
        }

        dfs(1);

        scanf("%d", &q);
        while (q--) {
            int x, y;
            scanf("%d %d", &x, &y);
            printf("%d\n", size[x] * size[y]);
        }
    }
    return 0;
}

