#include <stdio.h>

void solve() {
    int t;
    scanf("%d", &t);
    
    while (t--) {
        int n, i, j;
        scanf("%d", &n);
        
        int a[n], b[n];
        for (i = 0; i < n; i++) {
            scanf("%d", &a[i]);
        }
        
        for (i = 0; i < n; i++) {
            scanf("%d", &b[i]);
        }

        int sorted_a[n], sorted_b[n];
        for (i = 0; i < n; i++) {
            sorted_a[i] = a[i];
            sorted_b[i] = b[i];
        }

        for (i = 0; i < n - 1; i++) {
            for (j = i + 1; j < n; j++) {
                if (sorted_a[i] > sorted_a[j] || (sorted_a[i] == sorted_a[j] && sorted_b[i] > sorted_b[j])) {
                    int temp = sorted_a[i];
                    sorted_a[i] = sorted_a[j];
                    sorted_a[j] = temp;
                    
                    temp = sorted_b[i];
                    sorted_b[i] = sorted_b[j];
                    sorted_b[j] = temp;
                }
            }
        }

        int moves[10000][2], moveCount = 0;
        
        for (i = 0; i < n; i++) {
            if (a[i] != sorted_a[i] || b[i] != sorted_b[i]) {
                for (j = i + 1; j < n; j++) {
                    if (a[j] == sorted_a[i] && b[j] == sorted_b[i]) {
                        int temp = a[i];
                        a[i] = a[j];
                        a[j] = temp;
                        
                        temp = b[i];
                        b[i] = b[j];
                        b[j] = temp;
                        
                        moves[moveCount][0] = i + 1;
                        moves[moveCount][1] = j + 1;
                        moveCount++;
                        break;
                    }
                }
            }
        }

        int isSorted = 1;
        for (i = 0; i < n - 1; i++) {
            if (a[i] > a[i + 1] || b[i] > b[i + 1]) {
                isSorted = 0;
                break;
            }
        }

        if (isSorted) {
            printf("%d\n", moveCount);
            for (i = 0; i < moveCount; i++) {
                printf("%d %d\n", moves[i][0], moves[i][1]);
            }
        } else {
            printf("-1\n");
        }
    }
}

int main() {
    solve();
    return 0;
}

