#include <stdio.h>

#define MAX_N 500
#define MAX_M 500

int a[MAX_N][MAX_M], b[MAX_N][MAX_M], diff[MAX_N][MAX_M];

int solve() {
    int n, m;
    scanf("%d %d", &n, &m);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf("%1d", &a[i][j]);
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf("%1d", &b[i][j]);
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            diff[i][j] = (b[i][j] - a[i][j] + 3) % 3;
        }
    }

    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < m - 1; j++) {
            int val = diff[i][j];
            if (val != 0) {
                diff[i][j] = (diff[i][j] - val) % 3;
                diff[i][j + 1] = (diff[i][j + 1] - 2 * val) % 3;
                diff[i + 1][j] = (diff[i + 1][j] - 2 * val) % 3;
                diff[i + 1][j + 1] = (diff[i + 1][j + 1] - val) % 3;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        if (diff[i][m - 1] != 0) {
            return 0;
        }
    }

    for (int j = 0; j < m; j++) {
        if (diff[n - 1][j] != 0) {
            return 0;
        }
    }

    return 1;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        if (solve()) {
            printf("YES\n");
        } else {
            printf("NO\n");
        }
    }

    return 0;
}

