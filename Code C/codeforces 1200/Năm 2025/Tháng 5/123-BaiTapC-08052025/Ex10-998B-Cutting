#include <stdio.h>
#include <stdlib.h>

int max_cuts(int n, int B, int arr[]) {
    int odd_count = 0, even_count = 0;
    int cuts[n - 1];
    int valid_cuts = 0;

    for (int i = 0; i < n - 1; i++) {
        if (arr[i] % 2 == 0)
            even_count++;
        else
            odd_count++;

        if (even_count == odd_count) {
            cuts[valid_cuts++] = abs(arr[i] - arr[i + 1]);
        }
    }

    for (int i = 0; i < valid_cuts - 1; i++) {
        for (int j = i + 1; j < valid_cuts; j++) {
            if (cuts[i] > cuts[j]) {
                int temp = cuts[i];
                cuts[i] = cuts[j];
                cuts[j] = temp;
            }
        }
    }

    int total_cost = 0, total_cuts = 0;
    for (int i = 0; i < valid_cuts; i++) {
        if (total_cost + cuts[i] <= B) {
            total_cost += cuts[i];
            total_cuts++;
        } else {
            break;
        }
    }

    return total_cuts;
}

int main() {
    int n, B;
    scanf("%d %d", &n, &B);

    int arr[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("%d\n", max_cuts(n, B, arr));

    return 0;
}

