#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int current_price;
    int future_price;
    int price_diff;
} Product;

int compare(const void *x, const void *y) {
    Product *p1 = (Product*)x;
    Product *p2 = (Product*)y;
    return p1->price_diff - p2->price_diff;
}

int main() {
    int num_items, min_items_now;
    
    scanf("%d %d", &num_items, &min_items_now);
    
    int current_prices[num_items], future_prices[num_items];
    Product products[num_items];
    
    for (int i = 0; i < num_items; i++) {
        scanf("%d", &current_prices[i]);
    }
    
    for (int i = 0; i < num_items; i++) {
        scanf("%d", &future_prices[i]);
    }
    
    for (int i = 0; i < num_items; i++) {
        products[i].current_price = current_prices[i];
        products[i].future_price = future_prices[i];
        products[i].price_diff = current_prices[i] - future_prices[i];
    }
    
    qsort(products, num_items, sizeof(Product), compare);
    
    int total_cost = 0;
    int bought_now = 0;

    for (int i = 0; i < num_items; i++) {
        if (products[i].price_diff <= 0) {
            total_cost += products[i].current_price;
            bought_now++;
        } else {
            break;
        }
    }
    
    for (int i = 0; i < num_items && bought_now < min_items_now; i++) {
        if (products[i].price_diff > 0) {
            total_cost += products[i].current_price;
            bought_now++;
        }
    }
    
    for (int i = 0; i < num_items; i++) {
        if (products[i].price_diff > 0) {
            total_cost += products[i].future_price;
        }
    }
    
    printf("%d\n", total_cost);
    
    return 0;
}

