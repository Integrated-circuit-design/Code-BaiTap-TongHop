#include <stdio.h>
#include <stdlib.h>

#define MAX_N 1000
#define INF 1000000000

int n, m;
int prices[MAX_N];
int adj[MAX_N][MAX_N];

int find_min_cost_triangle() {
    int min_cost = INF;

    for (int u = 0; u < n; u++) {
        for (int v = u + 1; v < n; v++) {
            if (adj[u][v] == 1) {
                for (int w = v + 1; w < n; w++) {
                    if (adj[u][w] == 1 && adj[v][w] == 1) {
                        int cost = prices[u] + prices[v] + prices[w];
                        if (cost < min_cost) {
                            min_cost = cost;
                        }
                    }
                }
            }
        }
    }
    
    return (min_cost == INF) ? -1 : min_cost;
}

int main() {
    scanf("%d %d", &n, &m);

    for (int i = 0; i < n; i++) {
        scanf("%d", &prices[i]);
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            adj[i][j] = 0;
        }
    }

    for (int i = 0; i < m; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        u--; v--;
        adj[u][v] = 1;
        adj[v][u] = 1;
    }

    printf("%d\n", find_min_cost_triangle());

    return 0;
}

