#include <stdio.h>
#include <math.h>

typedef long long ll;

ll find_gcd(ll a, ll b) {
    if (b == 0)
        return a;
    return find_gcd(b, a % b);
}

int main() {
    int size;
    scanf("%d", &size);

    ll numbers[size];
    for (int i = 0; i < size; i++) {
        scanf("%lld", &numbers[i]);
    }

    ll current_gcd = numbers[0];
    for (int i = 1; i < size; i++) {
        current_gcd = find_gcd(current_gcd, numbers[i]);
    }

    int divisor_count = 0;
    ll max_divisor = (ll)sqrt((double)current_gcd);
    for (ll div = 1; div <= max_divisor; div++) {
        if (current_gcd % div == 0) {
            divisor_count++;
            if (div != current_gcd / div) {
                divisor_count++;
            }
        }
    }

    printf("%d\n", divisor_count);

    return 0;
}

