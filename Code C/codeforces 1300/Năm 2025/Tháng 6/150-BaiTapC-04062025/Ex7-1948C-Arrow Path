#include <stdio.h>
#include <string.h>

#define MAX 200005

char arrows[2][MAX];
int visited[2][MAX];

typedef struct {
    int x, y;
} Point;

Point q[MAX * 2];
int head, tail;

int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

int can_arrive(int n) {
    memset(visited, 0, sizeof(visited));
    head = tail = 0;

    q[tail++] = (Point){0, 0};
    visited[0][0] = 1;

    while (head < tail) {
        Point cur = q[head++];

        for (int i = 0; i < 4; i++) {
            int nx = cur.x + dx[i];
            int ny = cur.y + dy[i];

            if (nx < 0 || nx >= 2 || ny < 0 || ny >= n)
                continue;

            int next_y;
            if (arrows[nx][ny] == '>')
                next_y = ny + 1;
            else
                next_y = ny - 1;

            if (next_y < 0 || next_y >= n)
                continue;

            if (!visited[nx][next_y]) {
                visited[nx][next_y] = 1;
                q[tail++] = (Point){nx, next_y};
            }
        }
    }
    return visited[1][n - 1];
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n;
        scanf("%d", &n);
        scanf("%s", arrows[0]);
        scanf("%s", arrows[1]);

        if (can_arrive(n))
            printf("YES\n");
        else
            printf("NO\n");
    }

    return 0;
}

