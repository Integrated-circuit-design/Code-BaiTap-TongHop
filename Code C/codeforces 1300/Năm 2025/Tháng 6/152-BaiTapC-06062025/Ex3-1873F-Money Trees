#include <stdio.h>

#define MAX 200000

int fruits[MAX];
int heights[MAX];

int is_divisible_chain(int start, int end, int heights[]) {
    for (int i = start; i < end; i++) {
        if (heights[i] % heights[i + 1] != 0) return 0;
    }
    return 1;
}

int main() {
    int T; 
    scanf("%d", &T);

    while (T--) {
        int n;
        long long K;
        scanf("%d %lld", &n, &K);

        for (int i = 0; i < n; i++) scanf("%d", &fruits[i]);
        for (int i = 0; i < n; i++) scanf("%d", &heights[i]);

        int start = 0;
        long long sum_fruits = 0;
        int max_len = 0;

        for (int end = 0; end < n; end++) {
            if (end == 0 || heights[end - 1] % heights[end] != 0) {
                start = end;
                sum_fruits = fruits[end];
            } else {
                sum_fruits += fruits[end];
            }

            while (sum_fruits > K && start <= end) {
                sum_fruits -= fruits[start];
                start++;
            }

            int current_len = end - start + 1;
            if (current_len > max_len) {
                max_len = current_len;

