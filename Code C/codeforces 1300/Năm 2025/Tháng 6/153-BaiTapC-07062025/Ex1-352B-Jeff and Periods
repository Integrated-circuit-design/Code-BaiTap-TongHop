#include <stdio.h>
#include <stdlib.h>

#define MAXN 100000
#define MAXA 100000

typedef struct {
    int count;
    int *indices;
} ElementPositions;

int main() {
    int n;
    scanf("%d", &n);

    int *a = (int*) malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    ElementPositions elements[MAXA + 1] = {0};

    for (int i = 0; i <= MAXA; i++) {
        elements[i].count = 0;
        elements[i].indices = NULL;
    }

    int *freq = (int*) calloc(MAXA + 1, sizeof(int));
    for (int i = 0; i < n; i++) {
        freq[a[i]]++;
    }
    for (int i = 1; i <= MAXA; i++) {
        if (freq[i] > 0) {
            elements[i].indices = (int*) malloc(freq[i] * sizeof(int));
        }
    }
    free(freq);

    for (int i = 0; i < n; i++) {
        int val = a[i];
        elements[val].indices[elements[val].count++] = i;
    }

    int result_count = 0;
    int *res_x = (int*) malloc((MAXA + 1) * sizeof(int));
    int *res_p = (int*) malloc((MAXA + 1) * sizeof(int));

    for (int x = 1; x <= MAXA; x++) {
        if (elements[x].count == 0) continue;

        if (elements[x].count == 1) {
            res_x[result_count] = x;
            res_p[result_count] = 0;
            result_count++;
        } else {
            int diff = elements[x].indices[1] - elements[x].indices[0];
            int valid = 1;
            for (int i = 2; i < elements[x].count; i++) {
                if (elements[x].indices[i] - elements[x].indices[i - 1] != diff) {
                    valid = 0;
                    break;
                }
            }
            if (valid) {
                res_x[result_count] = x;
                res_p[result_count] = diff;
                result_count++;
            }
        }
    }

    printf("%d\n", result_count);
    for (int i = 0; i < result_count; i++) {
        printf("%d %d\n", res_x[i], res_p[i]);
    }

    for (int i = 1; i <= MAXA; i++) {
        free(elements[i].indices);
    }
    free(a);
    free(res_x);
    free(res_p);

    return 0;
}

