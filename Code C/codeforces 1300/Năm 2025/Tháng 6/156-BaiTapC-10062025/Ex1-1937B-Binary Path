#include <stdio.h>
#include <string.h>

#define MAXN 200005

int t, n;
char top[MAXN], bottom[MAXN];
char path[MAXN];
long long ways[MAXN][2];

int main() {
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        scanf("%s", top);
        scanf("%s", bottom);

        for (int i = 0; i <= n; i++) {
            ways[i][0] = 0;
            ways[i][1] = 0;
        }

        ways[0][0] = 1;
        path[0] = top[0];

        for (int i = 1; i <= n; i++) {
            char option1 = (i < n) ? top[i] : '2';
            char option2 = (i - 1 < n) ? bottom[i - 1] : '2';
            char option3 = (i < n) ? bottom[i] : '2';

            char bestChar = '2';
            if (ways[i - 1][0] > 0) {
                if (option1 < bestChar) bestChar = option1;
                if (option2 < bestChar) bestChar = option2;
            }
            if (ways[i - 1][1] > 0) {
                if (option3 < bestChar) bestChar = option3;
            }

            path[i] = bestChar;

            ways[i][0] = 0;
            if (ways[i - 1][0] > 0 && option1 == bestChar) {
                ways[i][0] += ways[i - 1][0];
            }

            ways[i][1] = 0;
            if (ways[i - 1][0] > 0 && option2 == bestChar) {
                ways[i][1] += ways[i - 1][0];
            }
            if (ways[i - 1][1] > 0 && option3 == bestChar) {
                ways[i][1] += ways[i - 1][1];
            }
        }

        path[n + 1] = '\0';
        printf("%s\n", path);
        printf("%lld\n", ways[n][1]);
    }

    return 0;
}

