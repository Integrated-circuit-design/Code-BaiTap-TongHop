#include <stdio.h>
#include <stdlib.h>

int is_sorted_arr(int *arr, int n) {
    for (int i = 1; i < n; i++)
        if (arr[i] < arr[i - 1]) return 0;
    return 1;
}

int main() {
    int t; scanf("%d", &t);
    while (t--) {
        int n, m; scanf("%d %d", &n, &m);
        int *a = malloc(n * sizeof(int));
        int *b = malloc(m * sizeof(int));
        for (int i = 0; i < n; i++) scanf("%d", &a[i]);
        for (int i = 0; i < m; i++) scanf("%d", &b[i]);

        if (is_sorted_arr(a, n)) {
            printf("YES\n");
            free(a); free(b);
            continue;
        }

        if (m > 1) {
            printf("YES\n");
            free(a); free(b);
            continue;
        }

        int val = b[0];
        int *change1 = malloc(n * sizeof(int));
        int *change2 = malloc(n * sizeof(int));
        for (int i = 0; i < n; i++) {
            change1[i] = a[i];
            change2[i] = val - a[i];
        }

        char *canChooseOrig = malloc(n * sizeof(char));
        char *canChooseTrans = malloc(n * sizeof(char));

        canChooseOrig[0] = 1;
        canChooseTrans[0] = 1;

        for (int i = 1; i < n; i++) {
            canChooseOrig[i] = 0;
            canChooseTrans[i] = 0;

            if ((canChooseOrig[i - 1] && change1[i] >= change1[i - 1]) ||
                (canChooseTrans[i - 1] && change1[i] >= change2[i - 1])) {
                canChooseOrig[i] = 1;
            }
            if ((canChooseOrig[i - 1] && change2[i] >= change1[i - 1]) ||
                (canChooseTrans[i - 1] && change2[i] >= change2[i - 1])) {
                canChooseTrans[i] = 1;
            }

            if (!canChooseOrig[i] && !canChooseTrans[i]) break;
        }

        if (canChooseOrig[n - 1] || canChooseTrans[n - 1])
            printf("YES\n");
        else
            printf("NO\n");

        free(a); free(b);
        free(change1); free(change2);
        free(canChooseOrig); free(canChooseTrans);
    }
    return 0;
}

