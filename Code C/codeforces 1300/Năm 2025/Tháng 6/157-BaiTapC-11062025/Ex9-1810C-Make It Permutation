#include <stdio.h>
#include <stdlib.h>

#define MAXN 200005

int a[MAXN];

int cmp(const void *x, const void *y) {
    int a = *(int*)x;
    int b = *(int*)y;
    if (a < b) return -1;
    if (a > b) return 1;
    return 0;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n;
        long long c, d;
        scanf("%d %lld %lld", &n, &c, &d);

        for (int i = 0; i < n; i++) scanf("%d", &a[i]);

        qsort(a, n, sizeof(int), cmp);

        int m = 0;
        for (int i = 0; i < n; i++) {
            if (i == 0 || a[i] != a[i - 1]) {
                a[m++] = a[i];
            }
        }

        long long ans = 1LL * n * c + d;

        long long removed = n - m;

        for (int k = 1; k <= m; k++) {
            long long insert_needed = (long long)a[k - 1] - k;
            if (insert_needed < 0) insert_needed = 0;

            long long cost = removed * c + insert_needed * d;

            if (cost < ans) ans = cost;

            removed++;
        }

        long long cost_end = (long long)(n - m) * c + d;
        if (cost_end < ans) ans = cost_end;

        printf("%lld\n", ans);
    }

    return 0;
}

