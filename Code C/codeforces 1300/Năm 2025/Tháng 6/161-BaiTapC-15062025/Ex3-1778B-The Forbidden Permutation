#include <stdio.h>

int pos[100005];

int find_min_moves(int n, int m, int d, int a[]) {
    int min_steps = n + 1;

    for (int i = 0; i < m - 1; i++) {
        int first = pos[a[i]];
        int second = pos[a[i + 1]];

        if (first >= second || second > first + d)
            continue;

        int gap = second - first;
        int needed_moves = d + 1 - gap;

        if (needed_moves <= first - 1 || needed_moves <= n - second)
            if (needed_moves < min_steps)
                min_steps = needed_moves;
        else
            if (gap < min_steps)
                min_steps = gap;
    }

    if (min_steps == n + 1)
        return 0;

    return min_steps;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n, m, d;
        scanf("%d %d %d", &n, &m, &d);

        int p[n + 1];
        for (int i = 1; i <= n; i++) {
            scanf("%d", &p[i]);
            pos[p[i]] = i;
        }

        int a[m];
        for (int i = 0; i < m; i++) {
            scanf("%d", &a[i]);
        }

        int result = find_min_moves(n, m, d, a);
        printf("%d\n", result);
    }

    return 0;
}

