#include <stdio.h>
#include <stdlib.h>

#define MAXN 100005

int a[MAXN];

long long min(long long a, long long b) {
    return a < b ? a : b;
}

long long try_pattern(int n, int start_parity) {
    int target_index = start_parity;
    long long steps = 0;
    for (int i = 0; i < n; i++) {
        if ((a[i] % 2) == start_parity) {
            steps += abs(i - target_index);
            target_index += 2;
        }
    }
    return steps;
}

int main() {
    int t; 
    scanf("%d", &t);

    while (t--) {
        int n;
        scanf("%d", &n);
        int count_even = 0, count_odd = 0;

        for (int i = 0; i < n; i++) {
            scanf("%d", &a[i]);
            if (a[i] % 2 == 0)
                count_even++;
            else
                count_odd++;
        }

        if (abs(count_even - count_odd) > 1) {
            printf("-1\n");
            continue;
        }

        if (count_even > count_odd) {
            printf("%lld\n", try_pattern(n, 0));
        } else if (count_odd > count_even) {
            printf("%lld\n", try_pattern(n, 1));
        } else {
            long long res1 = try_pattern(n, 0);
            long long res2 = try_pattern(n, 1);
            printf("%lld\n", min(res1, res2));
        }
    }
    return 0;
}

