#include <stdio.h>
#include <stdlib.h>

#define MAXN 120000

int a[MAXN];

int cmp(const void *x, const void *y) {
    int a = *(int*)x;
    int b = *(int*)y;
    return a - b;
}

int binary_search(int *arr, int n, int val, int skip) {
    int l = 0, r = n - 1;
    while (l <= r) {
        int mid = (l + r) / 2;
        if (arr[mid] == val) {
            if (mid != skip) return 1;
            if ((mid > 0 && arr[mid - 1] == val) || (mid < n - 1 && arr[mid + 1] == val))
                return 1;
            return 0;
        } else if (arr[mid] < val) l = mid + 1;
        else r = mid - 1;
    }
    return 0;
}

int main() {
    int n;
    scanf("%d", &n);

    for (int i = 0; i < n; ++i)
        scanf("%d", &a[i]);

    qsort(a, n, sizeof(int), cmp);

    int to_remove = 0;
    for (int i = 0; i < n; ++i) {
        int found = 0;
        for (int p = 0; p <= 31; ++p) {
            int power = 1 << p;
            int target = power - a[i];
            if (target <= 0) continue;
            if (binary_search(a, n, target, i)) {
                found = 1;
                break;
            }
        }
        if (!found)
            to_remove++;
    }

    printf("%d\n", to_remove);
    return 0;
}

