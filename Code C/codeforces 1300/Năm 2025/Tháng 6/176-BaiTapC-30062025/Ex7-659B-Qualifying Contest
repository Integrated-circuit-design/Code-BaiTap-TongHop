#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAXN 100005
#define MAXM 10005
#define NAMELEN 11

char names[MAXN][NAMELEN];
int scores[MAXN];
int regions[MAXN];

int region_index[MAXM][3];
int region_count[MAXM];

int cmp_desc(const void *a, const void *b) {
    int i = *(int*)a;
    int j = *(int*)b;
    return scores[j] - scores[i];
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);

    for (int i = 0; i < n; i++) {
        scanf("%s %d %d", names[i], &regions[i], &scores[i]);
        int reg = regions[i];
        if (region_count[reg] < 3) {
            region_index[reg][region_count[reg]++] = i;
        } else {
            int min_idx = 0;
            for (int j = 1; j < 3; j++) {
                if (scores[region_index[reg][j]] < scores[region_index[reg][min_idx]]) {
                    min_idx = j;
                }
            }
            if (scores[i] > scores[region_index[reg][min_idx]]) {
                region_index[reg][min_idx] = i;
            }
        }
    }

    for (int r = 1; r <= m; r++) {
        int ids[3];
        for (int j = 0; j < region_count[r]; j++) {
            ids[j] = region_index[r][j];
        }
        qsort(ids, region_count[r], sizeof(int), cmp_desc);

        if (region_count[r] >= 3 && scores[ids[1]] == scores[ids[2]]) {
            printf("?\n");
        } else {
            printf("%s %s\n", names[ids[0]], names[ids[1]]);
        }
    }

    return 0;
}

