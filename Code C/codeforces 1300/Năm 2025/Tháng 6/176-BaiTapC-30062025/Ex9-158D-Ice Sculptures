#include <stdio.h>

#define MAXN 20005

int t[MAXN];
int n;

int compute_max_with_step(int d) {
    int k = n / d;
    if (k < 3) return -2000000000;

    int max_sum = -2000000000;

    for (int start = 0; start < d; ++start) {
        int sum = 0;

        for (int i = 0; i < k; ++i) {
            int index = (start + i * d) % n;
            sum += t[index];
        }

        if (sum > max_sum) {
            max_sum = sum;
        }
    }

    return max_sum;
}

int find_best_sum() {
    int result = -2000000000;

    for (int d = 1; d <= n; ++d) {
        if (n % d == 0) {
            int current = compute_max_with_step(d);
            if (current > result) {
                result = current;
            }
        }
    }

    return result;
}

int main() {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &t[i]);
    }

    int answer = find_best_sum();
    printf("%d\n", answer);

    return 0;
}

