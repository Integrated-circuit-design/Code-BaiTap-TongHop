#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 110

int split_numbers(char *str, int arr[]) {
    int index = 0;
    int num = 0;
    for (int i = 0;; i++) {
        if (str[i] >= '0' && str[i] <= '9') {
            num = num * 10 + (str[i] - '0');
        }
        if (str[i] == ',' || str[i] == '\0') {
            arr[index++] = num;
            num = 0;
        }
        if (str[i] == '\0') break;
    }
    return index;
}

int exists(int arr[], int len, int val) {
    for (int i = 0; i < len; i++) {
        if (arr[i] == val) return 1;
    }
    return 0;
}

int cmp(const void *a, const void *b) {
    return (*(int*)a - *(int*)b);
}

int main() {
    char input[5000];
    int raw[MAX], clean[MAX];
    int n = 0, m = 0;

    scanf("%s", input);
    n = split_numbers(input, raw);

    for (int i = 0; i < n; i++) {
        if (!exists(clean, m, raw[i])) {
            clean[m++] = raw[i];
        }
    }

    qsort(clean, m, sizeof(int), cmp);

    for (int i = 0; i < m; ) {
        int start = clean[i];
        int end = start;
        while (i + 1 < m && clean[i + 1] == clean[i] + 1) {
            end = clean[++i];
        }

        if (start == end) printf("%d", start);
        else printf("%d-%d", start, end);

        if (++i < m) printf(",");
    }

    return 0;
}

