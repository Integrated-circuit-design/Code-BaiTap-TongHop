#include <stdio.h>
#include <string.h>

#define MAXN 405
#define MAXLEN 25

char input[MAXN][MAXLEN];
char norm[MAXN][MAXLEN];
int visited[MAXN];

void normalize(const char *src, char *dest) {
    char temp1[MAXLEN * 2], temp2[MAXLEN * 2];
    strcpy(temp1, src);

    while (1) {
        int i = 0, j = 0, change = 0;
        while (temp1[i]) {
            if (temp1[i] == 'o' && temp1[i + 1] == 'o') {
                temp2[j++] = 'u';
                i += 2;
                change = 1;
            } else {
                temp2[j++] = temp1[i++];
            }
        }
        temp2[j] = '\0';
        if (!change) break;
        strcpy(temp1, temp2);
    }

    while (1) {
        int i = 0, j = 0, change = 0;
        while (temp1[i]) {
            if (temp1[i] == 'k' && temp1[i + 1] == 'h') {
                temp2[j++] = 'h';
                i += 2;
                change = 1;
            } else {
                temp2[j++] = temp1[i++];
            }
        }
        temp2[j] = '\0';
        if (!change) break;
        strcpy(temp1, temp2);
    }

    strcpy(dest, temp1);
}

int main() {
    int n, i, j;
    scanf("%d", &n);

    for (i = 0; i < n; i++) {
        scanf("%s", input[i]);
        normalize(input[i], norm[i]);
    }

    int groups = 0;

    for (i = 0; i < n; i++) {
        if (!visited[i]) {
            groups++;
            visited[i] = 1;
            for (j = i + 1; j < n; j++) {
                if (!visited[j] && strcmp(norm[i], norm[j]) == 0) {
                    visited[j] = 1;
                }
            }
        }
    }

    printf("%d\n", groups);
    return 0;
}

