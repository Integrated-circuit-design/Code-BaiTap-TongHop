#include <stdio.h>
#include <math.h>

#define MAX_QUBITS 8

void print_bits(int val, int n) {
    for (int i = n - 1; i >= 0; i--) {
        printf("%d", (val >> i) & 1);
    }
}

int bits_to_index(int bits[], int n) {
    int idx = 0;
    for (int i = 0; i < n; i++) {
        idx = (idx << 1) | (bits[i] & 1);
    }
    return idx;
}

int main() {
    int N;
    printf("Nhap so luong qubit (1-8): ");
    scanf("%d", &N);
    if (N < 1 || N > MAX_QUBITS) {
        printf("So luong qubit khong hop le!\n");
        return 1;
    }

    int bits[MAX_QUBITS];
    printf("Nhap chuoi bits (bit dau tien phai la 1):\n");
    for (int i = 0; i < N; i++) {
        scanf("%d", &bits[i]);
    }

    if (bits[0] != 1) {
        printf("Bit dau tien phai la 1!\n");
        return 1;
    }

    int index_bits = bits_to_index(bits, N);

    double amplitude = 1.0 / sqrt(2.0);

    printf("\nTrang thai superposition:\n");
    printf("%.4f|", amplitude);
    print_bits(0, N);
    printf("> + %.4f|", amplitude);
    print_bits(index_bits, N);
    printf(">\n");

    return 0;
}

