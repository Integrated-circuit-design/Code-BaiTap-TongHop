#include <stdio.h>
#include <string.h>

#define MAXN 2005
#define MAXE 40005

int head[MAXN], to[MAXE], nxt[MAXE], ecnt;
int comp[MAXN], compSize[MAXN], compCnt;
int disu[20005], disv[20005];
int q[MAXN];

void addEdge(int u, int v) {
    to[++ecnt] = v;
    nxt[ecnt] = head[u];
    head[u] = ecnt;
}

void bfs(int start, int id) {
    int front = 0, back = 0;
    q[back++] = start;
    comp[start] = id;
    compSize[id] = 1;

    while (front < back) {
        int u = q[front++];
        for (int e = head[u]; e; e = nxt[e]) {
            int v = to[e];
            if (!comp[v]) {
                comp[v] = id;
                compSize[id]++;
                q[back++] = v;
            }
        }
    }
}

int main() {
    int n, k, m;
    scanf("%d", &n);

    scanf("%d", &k);
    for (int i = 0; i < k; i++) {
        int u, v; 
        scanf("%d%d", &u, &v);
        addEdge(u, v);
        addEdge(v, u);
    }

    scanf("%d", &m);
    for (int i = 0; i < m; i++) {
        scanf("%d%d", &disu[i], &disv[i]);
    }

    for (int i = 1; i <= n; i++) {
        if (!comp[i]) {
            compCnt++;
            bfs(i, compCnt);
        }
    }

    int bad[MAXN];
    memset(bad, 0, sizeof(bad));
    for (int i = 0; i < m; i++) {
        int a = comp[disu[i]], b = comp[disv[i]];
        if (a == b) bad[a] = 1;
    }

    int ans = 0;
    for (int i = 1; i <= compCnt; i++) {
        if (!bad[i] && compSize[i] > ans) ans = compSize[i];
    }

    printf("%d\n", ans);
    return 0;
}

