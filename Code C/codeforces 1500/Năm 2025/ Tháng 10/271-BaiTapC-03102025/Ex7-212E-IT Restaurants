#include <stdio.h>
#include <stdlib.h>

#define MAXN 5005

typedef struct Node {
    int v;
    struct Node *next;
} Node;

Node *adj[MAXN];
int color[MAXN];
int cnt0, cnt1;

void addEdge(int u, int v) {
    Node *p = (Node*)malloc(sizeof(Node));
    p->v = v; p->next = adj[u]; adj[u] = p;
}

void dfs(int u, int c) {
    color[u] = c;
    if (c == 0) cnt0++; else cnt1++;
    for (Node *p = adj[u]; p; p = p->next) {
        int v = p->v;
        if (color[v] == -1) dfs(v, c ^ 1);
    }
}

int main() {
    int n;
    scanf("%d", &n);

    for (int i = 0; i < n - 1; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        addEdge(u, v);
        addEdge(v, u);
    }

    for (int i = 1; i <= n; i++) color[i] = -1;

    dfs(1, 0);

    int ans[2*MAXN][2], k = 0;

    for (int a = 1; a <= cnt0; a++) {
        ans[k][0] = a;
        ans[k][1] = cnt1;
        k++;
    }

    for (int a = 1; a <= cnt1; a++) {
        ans[k][0] = a;
        ans[k][1] = cnt0;
        k++;
    }

    printf("%d\n", k);
    for (int i = 0; i < k; i++) {
        printf("%d %d\n", ans[i][0], ans[i][1]);
    }

    return 0;
}

