#include <stdio.h>

#define MAXN 100005
#define MAXE 200005

int n, m;
int hasCat[MAXN];
int head[MAXN], to[MAXE], nxt[MAXE], edgeCnt;
int ans;

int q[MAXN], front = 0, back = 0;

void addEdge(int u, int v) {
    to[edgeCnt] = v;
    nxt[edgeCnt] = head[u];
    head[u] = edgeCnt++;
}

int main() {
    scanf("%d %d", &n, &m);
    for (int i = 1; i <= n; i++) scanf("%d", &hasCat[i]);

    for (int i = 1; i <= n; i++) head[i] = -1;
    edgeCnt = 0;

    for (int i = 0; i < n - 1; i++) {
        int x, y;
        scanf("%d %d", &x, &y);
        addEdge(x, y);
        addEdge(y, x);
    }

    int visited[MAXN] = {0};
    int consecCats[MAXN] = {0};

    q[back++] = 1;
    visited[1] = 1;
    consecCats[1] = hasCat[1];

    while (front < back) {
        int u = q[front++];
        int isLeaf = 1;

        for (int e = head[u]; e != -1; e = nxt[e]) {
            int v = to[e];
            if (visited[v]) continue;

            isLeaf = 0;
            visited[v] = 1;

            if (hasCat[v]) consecCats[v] = consecCats[u] + 1;
            else consecCats[v] = 0;

            if (consecCats[v] <= m) {
                q[back++] = v;
            }
        }

        if (isLeaf && consecCats[u] <= m) ans++;
    }

    printf("%d\n", ans);
    return 0;
}

