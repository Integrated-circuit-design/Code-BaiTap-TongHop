#include <stdio.h>
#include <stdlib.h>

typedef long long ll;

typedef struct {
    ll money;
    ll friendship;
} Friend;

int cmp(const void *a, const void *b) {
    Friend *x = (Friend*)a;
    Friend *y = (Friend*)b;
    if (x->money < y->money) return -1;
    if (x->money > y->money) return 1;
    return 0;
}

int upperBound(Friend *arr, int n, ll value) {
    int l = 0, r = n;
    while (l < r) {
        int mid = (l + r) / 2;
        if (arr[mid].money < value)
            l = mid + 1;
        else
            r = mid;
    }
    return l;
}

int main() {
    int n;
    ll d;
    scanf("%d %lld", &n, &d);

    Friend *arr = (Friend*)malloc(n * sizeof(Friend));
    for (int i = 0; i < n; i++) {
        scanf("%lld %lld", &arr[i].money, &arr[i].friendship);
    }

    qsort(arr, n, sizeof(Friend), cmp);

    ll *prefix = (ll*)malloc((n + 1) * sizeof(ll));
    prefix[0] = 0;
    for (int i = 0; i < n; i++) {
        prefix[i + 1] = prefix[i] + arr[i].friendship;
    }

    ll ans = 0;
    for (int i = 0; i < n; i++) {
        ll limit = arr[i].money + d;
        int j = upperBound(arr, n, limit);
        ll sum = prefix[j] - prefix[i];
        if (sum > ans) ans = sum;
    }

    printf("%lld\n", ans);

    free(prefix);
    free(arr);
    return 0;
}

