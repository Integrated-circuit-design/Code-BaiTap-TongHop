#include <stdio.h>
#include <string.h>

#define MAX 50
#define STACK_SIZE 2500

typedef struct {
    int x, y, px, py;
} Node;

int n, m;
char grid[MAX][MAX];
int visited[MAX][MAX];
int dx[] = {-1, 1, 0, 0};
int dy[] = {0, 0, -1, 1};

int checkCycle(int sx, int sy) {
    Node stack[STACK_SIZE];
    int top = 0;
    stack[top++] = (Node){sx, sy, -1, -1};
    visited[sx][sy] = 1;

    while (top > 0) {
        Node cur = stack[--top];
        for (int dir = 0; dir < 4; dir++) {
            int nx = cur.x + dx[dir];
            int ny = cur.y + dy[dir];
            if (nx < 0 || nx >= n || ny < 0 || ny >= m) continue;
            if (grid[nx][ny] != grid[sx][sy]) continue;
            if (!visited[nx][ny]) {
                visited[nx][ny] = 1;
                stack[top++] = (Node){nx, ny, cur.x, cur.y};
            } else if (nx != cur.px || ny != cur.py) {
                return 1;
            }
        }
    }
    return 0;
}

int main() {
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; i++) scanf("%s", grid[i]);
    memset(visited, 0, sizeof(visited));

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (!visited[i][j]) {
                if (checkCycle(i, j)) {
                    printf("Yes\n");
                    return 0;
                }
            }
        }
    }
    printf("No\n");
    return 0;
}

