#include <stdio.h>
#include <stdlib.h>

long long llabs(long long x) {
    return x < 0 ? -x : x;
}

void sort(long long *a, int n) {
    for (int i = 0; i < n-1; i++) {
        int min_idx = i;
        for (int j = i+1; j < n; j++) {
            if (a[j] < a[min_idx]) min_idx = j;
        }
        if (min_idx != i) {
            long long tmp = a[i];
            a[i] = a[min_idx];
            a[min_idx] = tmp;
        }
    }
}

long long compute_cost(long long *a, int n, long long c) {
    long long total = 0;
    long long power = 1;
    for (int i = 0; i < n; i++) {
        total += llabs(a[i] - power);
        if (i < n-1) {
            if (power > 1000000000000000000LL / c) power = 1000000000000000000LL;
            else power *= c;
        }
    }
    return total;
}

int main() {
    int n;
    scanf("%d", &n);
    long long a[n];
    for (int i = 0; i < n; i++) scanf("%lld", &a[i]);

    sort(a, n);

    long long best_cost = 1000000000000000000LL;

    for (long long c = 1; c <= 1000000; c++) {
        long long cost = compute_cost(a, n, c);
        if (cost < best_cost) best_cost = cost;
        if (cost > best_cost) break;
    }

    printf("%lld\n", best_cost);
    return 0;
}

