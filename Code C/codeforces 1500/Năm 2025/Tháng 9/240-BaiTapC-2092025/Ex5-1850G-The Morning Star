#include <stdio.h>
#include <stdlib.h>

typedef struct {
    long long key;
} Item;

int cmp_item(const void* a, const void* b) {
    long long x = ((Item*)a)->key;
    long long y = ((Item*)b)->key;
    if (x < y) return -1;
    if (x > y) return 1;
    return 0;
}

long long count_pairs(Item arr[], int n) {
    qsort(arr, n, sizeof(Item), cmp_item);
    long long ans = 0;
    int i = 0;
    while (i < n) {
        int j = i;
        while (j < n && arr[j].key == arr[i].key) j++;
        long long k = j - i;
        ans += k * (k - 1);
        i = j;
    }
    return ans;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        long long x[n], y[n];
        Item A[n], B[n], C[n], D[n];

        for (int i = 0; i < n; i++) {
            scanf("%lld %lld", &x[i], &y[i]);
            A[i].key = x[i];
            B[i].key = y[i];
            C[i].key = x[i] - y[i];
            D[i].key = x[i] + y[i];
        }

        long long ans = 0;
        ans += count_pairs(A, n);
        ans += count_pairs(B, n);
        ans += count_pairs(C, n);
        ans += count_pairs(D, n);

        printf("%lld\n", ans);
    }
    return 0;
}

