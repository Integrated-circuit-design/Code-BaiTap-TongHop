#include <stdio.h>
#include <stdlib.h>

typedef long long ll;

int cmp(const void *x, const void *y) {
    ll a = *(ll*)x, b = *(ll*)y;
    return (b - a > 0) - (b - a < 0);
}

int can(ll k, ll *a, int n, ll c, ll d) {
    ll total = 0;
    int period = k + 1;
    for (ll day = 0; day < d; day++) {
        int idx = day % period;
        if (idx >= n) idx = n - 1;
        total += a[idx];
        if (total >= c) return 1;
    }
    return 0;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        ll c, d;
        scanf("%d %lld %lld", &n, &c, &d);
        ll a[n];
        for (int i = 0; i < n; i++) scanf("%lld", &a[i]);

        qsort(a, n, sizeof(ll), cmp);

        ll max_possible = 0;
        for (int i = 0; i < (n < d ? n : d); i++) max_possible += a[i];
        if (max_possible < c) {
            printf("Impossible\n");
            continue;
        }

        if (a[0] * d >= c) {
            printf("Infinity\n");
            continue;
        }

        ll left = 0, right = d, ans = 0;
        while (left <= right) {
            ll mid = (left + right) / 2;
            if (can(mid, a, n, c, d)) {
                ans = mid;
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        printf("%lld\n", ans);
    }
    return 0;
}

