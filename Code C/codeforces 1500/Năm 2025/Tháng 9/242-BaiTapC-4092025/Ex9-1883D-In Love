#include <stdio.h>
#include <stdlib.h>

#define MAXQ 100005

typedef struct {
    int l, r;
    int alive;
} Segment;

Segment segs[MAXQ];
int n = 0;

int cmpL(const void *a, const void *b) {
    int x = *(int*)a, y = *(int*)b;
    return (x > y) - (x < y);
}
int cmpR(const void *a, const void *b) {
    int x = *(int*)a, y = *(int*)b;
    return (x > y) - (x < y);
}

int main() {
    int q;
    scanf("%d", &q);

    for (int step = 0; step < q; step++) {
        char op;
        int l, r;
        scanf(" %c %d %d", &op, &l, &r);

        if (op == '+') {
            segs[n].l = l;
            segs[n].r = r;
            segs[n].alive = 1;
            n++;
        } else {
            for (int i = n - 1; i >= 0; i--) {
                if (segs[i].alive && segs[i].l == l && segs[i].r == r) {
                    segs[i].alive = 0;
                    break;
                }
            }
        }

        int Ls[MAXQ], Rs[MAXQ], cnt = 0;
        for (int i = 0; i < n; i++) {
            if (segs[i].alive) {
                Ls[cnt] = segs[i].l;
                Rs[cnt] = segs[i].r;
                cnt++;
            }
        }

        if (cnt == 0) {
            printf("NO\n");
            continue;
        }

        qsort(Ls, cnt, sizeof(int), cmpL);
        qsort(Rs, cnt, sizeof(int), cmpR);

        int maxL = Ls[cnt - 1];
        int minR = Rs[0];

        if (maxL > minR) printf("YES\n");
        else printf("NO\n");
    }

    return 0;
}

