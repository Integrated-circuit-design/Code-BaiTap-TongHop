#include <stdio.h>
#include <stdlib.h>

#define MAXN 100005

long long a[MAXN];

long long gcd(long long x, long long y) {
    while (y != 0) {
        long long t = x % y;
        x = y;
        y = t;
    }
    return x;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        for (int i = 0; i < n; i++)
            scanf("%lld", &a[i]);

        if (n == 1) {
            printf("0\n");
            continue;
        }

        long long m = 0;
        long long c = 0;
        int all_equal = 1;
        long long first_diff = a[1] - a[0];

        for (int i = 1; i < n; i++) {
            long long diff = a[i] - a[i-1];
            if (diff != first_diff)
                all_equal = 0;

            if (diff != first_diff) {
                long long delta = llabs(diff - first_diff);
                if (m == 0) m = delta;
                else m = gcd(m, delta);
            }
        }

        if (all_equal) {
            printf("0\n");
            continue;
        }

        if (m == 0) {
            printf("-1\n");
            continue;
        }

        c = (first_diff % m + m) % m;

        int ok = 1;
        for (int i = 1; i < n; i++) {
            if ((a[i-1] + c) % m != a[i] % m) {
                ok = 0;
                break;
            }
        }

        if (!ok || c >= m)
            printf("-1\n");
        else
            printf("%lld %lld\n", m, c);
    }
    return 0;
}

