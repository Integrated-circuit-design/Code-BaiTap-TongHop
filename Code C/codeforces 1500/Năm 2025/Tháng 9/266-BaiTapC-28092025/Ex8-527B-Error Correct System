#include <stdio.h>
#include <string.h>

#define ALPHABET 26

int main() {
    int n;
    scanf("%d", &n);

    char S[n+1], T[n+1];
    scanf("%s", S);
    scanf("%s", T);

    int hamming = 0;

    int mis_pos[ALPHABET][ALPHABET];
    for(int i=0; i<ALPHABET; i++)
        for(int j=0; j<ALPHABET; j++)
            mis_pos[i][j] = -1;

    int best_i = -1, best_j = -1;
    int max_reduce = 0;

    for(int i=0; i<n; i++) {
        if(S[i] != T[i]) {
            hamming++;
            int s = S[i]-'a';
            int t = T[i]-'a';

            if(mis_pos[t][s] != -1) {
                best_i = i;
                best_j = mis_pos[t][s];
                max_reduce = 2;
            }

            if(mis_pos[s][t] == -1)
                mis_pos[s][t] = i;
        }
    }

    if(max_reduce < 2) {
        for(int i=0; i<n; i++) {
            if(S[i] != T[i]) {
                int t = T[i]-'a';
                for(int j=0; j<ALPHABET; j++) {
                    if(mis_pos[t][j] != -1) {
                        best_i = i;
                        best_j = mis_pos[t][j];
                        max_reduce = 1;
                        break;
                    }
                }
                if(max_reduce == 1) break;
            }
        }
    }

    printf("%d\n", hamming - max_reduce);
    if(best_i != -1)
        printf("%d %d\n", best_i+1, best_j+1);
    else
        printf("-1 -1\n");

    return 0;
}

