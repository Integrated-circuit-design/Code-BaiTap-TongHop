#include <stdio.h>

#define MAX 505

char maze[MAX][MAX];
int visited[MAX][MAX];
int qx[MAX * MAX], qy[MAX * MAX];
int n, m, k;
int dx[4] = {1, -1, 0, 0};
int dy[4] = {0, 0, 1, -1};

int main() {
    scanf("%d %d %d", &n, &m, &k);
    for (int i = 0; i < n; i++)
        scanf("%s", maze[i]);

    int total_empty = 0;
    int start_x = -1, start_y = -1;

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (maze[i][j] == '.') {
                total_empty++;
                start_x = i;
                start_y = j;
            }
        }
    }

    int need = total_empty - k;
    int front = 0, back = 0;
    int count = 0;

    qx[back] = start_x;
    qy[back++] = start_y;
    visited[start_x][start_y] = 1;
    count++;

    while (front < back && count < need) {
        int x = qx[front];
        int y = qy[front];
        front++;

        for (int d = 0; d < 4; d++) {
            int nx = x + dx[d];
            int ny = y + dy[d];
            if (nx >= 0 && nx < n && ny >= 0 && ny < m) {
                if (!visited[nx][ny] && maze[nx][ny] == '.') {
                    visited[nx][ny] = 1;
                    qx[back] = nx;
                    qy[back++] = ny;
                    count++;
                    if (count == need) break;
                }
            }
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (maze[i][j] == '.' && !visited[i][j])
                maze[i][j] = 'X';
        }
    }

    for (int i = 0; i < n; i++)
        printf("%s\n", maze[i]);

    return 0;
}

