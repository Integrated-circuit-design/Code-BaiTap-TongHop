#include <stdio.h>
#include <string.h>

#define MAXN 1005
#define MAXB 1001
#define MAXW 20005
#define MAX(a,b) ((a)>(b)?(a):(b))

int cost[MAXB];
int value[MAXN], weight[MAXN];
int dp[MAXW];
int b[MAXN], c[MAXN];

void compute_costs() {
    for (int i = 0; i < MAXB; i++) cost[i] = 1e9;
    cost[1] = 0;
    for (int cur = 1; cur < MAXB; cur++) {
        for (int x = 1; x <= cur; x++) {
            int nxt = cur + cur / x;
            if (nxt >= MAXB) break;
            if (cost[nxt] > cost[cur] + 1)
                cost[nxt] = cost[cur] + 1;
        }
    }
}

int maxCoins(int n, int k) {
    int total = 0;
    for (int i = 0; i < n; i++) {
        weight[i] = cost[b[i]];
        if (weight[i] > 20) weight[i] = 20;
        value[i] = c[i];
        total += weight[i];
    }
    if (total > k) total = k;
    if (total > MAXW - 1) total = MAXW - 1;

    memset(dp, 0, sizeof(dp));

    for (int i = 0; i < n; i++) {
        for (int j = total; j >= weight[i]; j--) {
            int newVal = dp[j - weight[i]] + value[i];
            if (newVal > dp[j])
                dp[j] = newVal;
        }
    }

    int res = 0;
    for (int i = 0; i <= total; i++)
        if (dp[i] > res) res = dp[i];
    return res;
}

int main() {
    compute_costs();

    int t;
    scanf("%d", &t);
    while (t--) {
        int n, k;
        scanf("%d %d", &n, &k);
        for (int i = 0; i < n; i++) scanf("%d", &b[i]);
        for (int i = 0; i < n; i++) scanf("%d", &c[i]);
        printf("%d\n", maxCoins(n, k));
    }
    return 0;
}

