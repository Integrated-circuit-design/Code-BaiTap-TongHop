#include <stdio.h>
#include <math.h>

typedef long long ll;

ll gcd(ll a, ll b) {
    return b == 0 ? a : gcd(b, a % b);
}

void swap(ll *x, ll *y) {
    ll tmp = *x;
    *x = *y;
    *y = tmp;
}

void sortArray(ll arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}

int findDivisors(ll g, ll divisors[]) {
    int count = 0;
    for (ll i = 1; i * i <= g; i++) {
        if (g % i == 0) {
            divisors[count++] = i;
            if (i != g / i)
                divisors[count++] = g / i;
        }
    }
    sortArray(divisors, count);
    return count;
}

ll findAnswer(ll divisors[], int count, ll low, ll high) {
    ll best = -1;
    for (int i = 0; i < count; i++) {
        if (divisors[i] >= low && divisors[i] <= high)
            best = divisors[i];
    }
    return best;
}

int main() {
    ll a, b;
    int n;
    scanf("%lld %lld", &a, &b);
    scanf("%d", &n);

    ll g = gcd(a, b);
    ll divisors[70000];
    int count = findDivisors(g, divisors);

    for (int i = 0; i < n; i++) {
        ll low, high;
        scanf("%lld %lld", &low, &high);
        ll ans = findAnswer(divisors, count, low, high);
        printf("%lld\n", ans);
    }

    return 0;
}

