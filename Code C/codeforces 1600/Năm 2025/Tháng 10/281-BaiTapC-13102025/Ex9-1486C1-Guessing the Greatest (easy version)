#include <stdio.h>
#include <stdlib.h>

int find_max_pos(int *arr, int n) {
    int max_pos = 1;
    for (int i = 2; i <= n; i++) {
        if (arr[i] > arr[max_pos])
            max_pos = i;
    }
    return max_pos;
}

int ask(int l, int r) {
    int pos;
    printf("? %d %d\n", l, r);
    fflush(stdout);
    scanf("%d", &pos);
    return pos;
}

int main() {
    int n;
    if (scanf("%d", &n) != 1) return 0;
    int *a = (int*)malloc((n + 1) * sizeof(int));
    int read_count = 0;
    while (read_count < n && scanf("%d", &a[read_count + 1]) == 1)
        read_count++;
    if (read_count == n) {
        int pos = find_max_pos(a, n);
        printf("! %d\n", pos);
        fflush(stdout);
        free(a);
        return 0;
    }
    int left = 1, right = n;
    int second = ask(left, right);
    int side_check;
    if (second > 1) {
        side_check = ask(1, second);
        if (side_check == second) {
            right = second - 1;
        } else {
            left = second + 1;
        }
    } else {
        left = 2;
    }
    while (left < right) {
        int mid = (left + right) / 2;
        int res = ask(left, mid);
        if (res == second)
            right = mid;
        else
            left = mid + 1;
    }
    printf("! %d\n", left);
    fflush(stdout);
    free(a);
    return 0;
}

