#include <stdio.h>
#include <stdlib.h>
#include <math.h>

typedef long long ll;

#define MAXN 200005

ll a[MAXN];

int perfectSquareRoot(ll x, ll *root) {
    if (x < 0) return 0;
    ll r = (ll)(sqrt((double)x) + 0.5);
    if (r*r == x) {
        *root = r;
        return 1;
    }
    return 0;
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        for (int i = 0; i < n; i++)
            scanf("%lld", &a[i]);

        int q;
        scanf("%d", &q);
        for (int qi = 0; qi < q; qi++) {
            ll x, y;
            scanf("%lld %lld", &x, &y);

            ll D, sqrtD;
            D = x*x - 4*y;
            if (D < 0 || !perfectSquareRoot(D, &sqrtD)) {
                printf("0 ");
                continue;
            }

            ll u1 = (x + sqrtD) / 2;
            ll u2 = (x - sqrtD) / 2;

            ll ans = 0;

            for (int i = 0; i < n; i++) {
                ll ai = a[i];
                ll aj1 = x - ai;
                if (ai != aj1) {
                    for (int j = i+1; j < n; j++) {
                        if (a[j] == aj1 && ai * a[j] == y)
                            ans++;
                    }
                } else {
                    for (int j = i+1; j < n; j++) {
                        if (a[j] == aj1 && ai * a[j] == y)
                            ans++;
                    }
                }
            }

            printf("%lld ", ans);
        }
        printf("\n");
    }
    return 0;
}

