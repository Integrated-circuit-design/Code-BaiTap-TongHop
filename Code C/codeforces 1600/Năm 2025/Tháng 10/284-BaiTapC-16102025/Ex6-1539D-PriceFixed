#include <stdio.h>
#include <stdlib.h>

typedef long long ll;

typedef struct {
    ll need;
    ll limit;
} Item;

int cmp(const void *a, const void *b) {
    Item *x = (Item*)a;
    Item *y = (Item*)b;
    if (x->limit < y->limit) return -1;
    if (x->limit > y->limit) return 1;
    return 0;
}

int main() {
    int n;
    scanf("%d", &n);
    Item *arr = (Item*)malloc(n * sizeof(Item));
    for (int i = 0; i < n; i++) {
        scanf("%lld %lld", &arr[i].need, &arr[i].limit);
    }
    qsort(arr, n, sizeof(Item), cmp);
    ll bought = 0;
    ll cost = 0;
    int i = 0;
    int j = n - 1;
    while (i <= j) {
        if (bought >= arr[j].limit) {
            cost += arr[j].need;
            bought += arr[j].need;
            j--;
        } else {
            ll missing = arr[j].limit - bought;
            if (arr[i].need > missing) {
                cost += 2 * missing;
                bought += missing;
                arr[i].need -= missing;
            } else {
                cost += 2 * arr[i].need;
                bought += arr[i].need;
                i++;
            }
        }
    }
    printf("%lld\n", cost);
    free(arr);
    return 0;
}

