#include <stdio.h>
#define MOD 998244353
typedef long long ll;

typedef struct {
    ll a, b, c;
} Triangle;

ll modpow(ll a, ll b) {
    ll res = 1;
    while (b > 0) {
        if (b & 1) res = res * a % MOD;
        a = a * a % MOD;
        b >>= 1;
    }
    return res;
}

ll comb(ll n, ll k) {
    if (k < 0 || k > n) return 0;
    if (k == 0 || k == n) return 1;
    ll res = 1;
    for (ll i = 1; i <= k; i++) {
        res = res * (n - i + 1) % MOD;
        res = res * modpow(i, MOD - 2) % MOD;
    }
    return res;
}

int main() {
    int n;
    scanf("%d", &n);
    int m = n / 3;
    Triangle t[m];
    for (int i = 0; i < m; i++)
        scanf("%lld %lld %lld", &t[i].a, &t[i].b, &t[i].c);

    ll total = 1;
    for (int i = 0; i < m; i++) {
        ll a = t[i].a, b = t[i].b, c = t[i].c;
        ll maxv = a + b;
        if (a + c > maxv) maxv = a + c;
        if (b + c > maxv) maxv = b + c;

        int cnt = 0;
        if (a + b == maxv) cnt++;
        if (a + c == maxv) cnt++;
        if (b + c == maxv) cnt++;

        total = total * (2LL * cnt % MOD) % MOD;
    }

    ll ways = comb(m, m / 2);
    ll ans = total * ways % MOD;

    printf("%lld\n", ans);
    return 0;
}

