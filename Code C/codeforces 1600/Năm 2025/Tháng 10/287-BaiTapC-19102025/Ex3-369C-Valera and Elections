#include <stdio.h>

#define MAXN 100005

typedef struct {
    int to;
    int type;
} Edge;

Edge tree[MAXN * 2];
int tree_size[MAXN];
Edge children[MAXN][10];

int n;
int candidates[MAXN];
int cnt = 0;

void dfs(int u, int parent) {
    for (int i = 0; i < tree_size[u]; i++) {
        int v = children[u][i].to;
        int t = children[u][i].type;
        if (v == parent) continue;
        if (t == 2) {
            candidates[cnt++] = v;
        }
        dfs(v, u);
    }
}

int main() {
    scanf("%d", &n);

    for (int i = 1; i <= n; i++) tree_size[i] = 0;

    for (int i = 0; i < n - 1; i++) {
        int x, y, t;
        scanf("%d %d %d", &x, &y, &t);
        children[x][tree_size[x]++] = (Edge){y, t};
        children[y][tree_size[y]++] = (Edge){x, t};
    }

    dfs(1, 0);

    printf("%d\n", cnt);
    for (int i = 0; i < cnt; i++) {
        printf("%d%c", candidates[i], i == cnt-1 ? '\n' : ' ');
    }

    return 0;
}

