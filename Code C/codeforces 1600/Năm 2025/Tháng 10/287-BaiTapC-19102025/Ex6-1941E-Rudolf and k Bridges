#include <stdio.h>
#include <stdlib.h>

#define INF 1000000000

int min_cost_row(int *a, int m, int d) {
    int *dp = (int*)malloc(m * sizeof(int));
    int *prefix_min = (int*)malloc(m * sizeof(int));
    
    dp[0] = a[0] + 1;
    prefix_min[0] = dp[0];

    for(int j = 1; j < m; j++) {
        int left = (j - d >= 0) ? j - d : 0;
        int min_prev = prefix_min[j - 1];
        if(left > 0) min_prev = (prefix_min[j - 1] < prefix_min[left - 1]) ? prefix_min[j - 1] : prefix_min[left - 1];
        dp[j] = a[j] + 1 + min_prev;
        prefix_min[j] = (dp[j] < prefix_min[j - 1]) ? dp[j] : prefix_min[j - 1];
    }

    int res = dp[m - 1];
    free(dp);
    free(prefix_min);
    return res;
}

int main() {
    int t;
    scanf("%d", &t);
    while(t--) {
        int n, m, k, d;
        scanf("%d %d %d %d", &n, &m, &k, &d);

        int **a = (int**)malloc(n * sizeof(int*));
        for(int i = 0; i < n; i++) {
            a[i] = (int*)malloc(m * sizeof(int));
            for(int j = 0; j < m; j++)
                scanf("%d", &a[i][j]);
        }

        int *row_cost = (int*)malloc(n * sizeof(int));
        for(int i = 0; i < n; i++)
            row_cost[i] = min_cost_row(a[i], m, d);

        int min_total = INF;
        int sum = 0;
        for(int i = 0; i < k; i++) sum += row_cost[i];
        if(sum < min_total) min_total = sum;

        for(int i = k; i < n; i++) {
            sum += row_cost[i] - row_cost[i - k];
            if(sum < min_total) min_total = sum;
        }

        printf("%d\n", min_total);

        for(int i = 0; i < n; i++) free(a[i]);
        free(a);
        free(row_cost);
    }
    return 0;
}

