#include <stdio.h>
#include <stdlib.h>

typedef struct {
    long long pos;
    long long power;
} Beacon;

int cmp(const void *a, const void *b) {
    Beacon *ba = (Beacon *)a;
    Beacon *bb = (Beacon *)b;
    if (ba->pos < bb->pos) return -1;
    if (ba->pos > bb->pos) return 1;
    return 0;
}

int main() {
    int n;
    scanf("%d", &n);

    Beacon *a = (Beacon *)malloc(n * sizeof(Beacon));
    int *destroyed = (int *)malloc(n * sizeof(int));

    for (int i = 0; i < n; i++) {
        scanf("%lld %lld", &a[i].pos, &a[i].power);
    }

    qsort(a, n, sizeof(Beacon), cmp);

    destroyed[n-1] = 1;
    for (int i = n-2; i >= 0; i--) {
        destroyed[i] = 1;
        int j = i + 1;
        while (j < n && a[j].pos <= a[i].pos + a[i].power) {
            destroyed[i] += destroyed[j];
            break;
        }
    }

    int minDestroyed = destroyed[0];
    for (int i = 1; i < n; i++) {
        if (destroyed[i] < minDestroyed) {
            minDestroyed = destroyed[i];
        }
    }

    printf("%d\n", minDestroyed);

    free(a);
    free(destroyed);
    return 0;
}

