#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MAXN 400005

long long a[MAXN], uniq[MAXN], freq[MAXN], pref[MAXN];

int cmp(const void *x, const void *y) {
    long long A = *(long long*)x, B = *(long long*)y;
    return (A > B) - (A < B);
}

int main() {
    int n;
    long long I;
    scanf("%d %lld", &n, &I);
    for (int i = 0; i < n; i++) scanf("%lld", &a[i]);

    qsort(a, n, sizeof(long long), cmp);

    int m = 0;
    for (int i = 0; i < n; i++) {
        if (i == 0 || a[i] != a[i - 1]) {
            uniq[m] = a[i];
            freq[m] = 1;
            m++;
        } else freq[m - 1]++;
    }

    pref[0] = freq[0];
    for (int i = 1; i < m; i++) pref[i] = pref[i - 1] + freq[i];

    long long bits = 8LL * I;
    long long bitsPerElement = bits / n;
    if (bitsPerElement > 30) bitsPerElement = 30;
    long long K = 1LL << bitsPerElement;

    if (K >= m) {
        printf("0\n");
        return 0;
    }

    long long best = 0;
    for (int i = 0; i + K - 1 < m; i++) {
        int j = i + K - 1;
        long long sum = pref[j] - (i > 0 ? pref[i - 1] : 0);
        if (sum > best) best = sum;
    }

    printf("%lld\n", n - best);
    return 0;
}

