#include <stdio.h>

#define MAXN 200005
#define MAXE 400005

int n, head[MAXN], to[MAXE], nxt[MAXE], ecnt = 0;
int color[MAXN], deg[MAXN], max_deg = 0;
int q[MAXN];

void add_edge(int u, int v) {
    to[++ecnt] = v;
    nxt[ecnt] = head[u];
    head[u] = ecnt;
    if (++deg[u] > max_deg) max_deg = deg[u];
}

void bfs() {
    int front = 0, back = 0;
    q[back++] = 1;
    color[1] = 1;
    while (front < back) {
        int u = q[front++];
        int used_color = 1;
        for (int e = head[u]; e; e = nxt[e]) {
            int v = to[e];
            if (color[v]) continue;
            while (used_color == color[u] || used_color == color[q[(front-1)/2]])
                used_color++;
            color[v] = used_color++;
            q[back++] = v;
        }
    }
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i < n; ++i) {
        int x, y;
        scanf("%d%d", &x, &y);
        add_edge(x, y);
        add_edge(y, x);
    }
    bfs();
    printf("%d\n", max_deg + 1);
    for (int i = 1; i <= n; ++i)
        printf("%d%c", color[i], i == n ? '\n' : ' ');
    return 0;
}
