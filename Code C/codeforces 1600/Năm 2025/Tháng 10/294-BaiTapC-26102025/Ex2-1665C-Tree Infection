#include <stdio.h>
#include <stdlib.h>

#define MAXN 200005
#define MAX_CHILD 1000

int t, n;
int childCount[MAXN];
int children[MAXN][MAX_CHILD];

typedef struct {
    int node;
    int time;
} NodeTime;

NodeTime queue[MAXN*2];
int front, back;

int max(int a, int b) { return a > b ? a : b; }

int solve() {
    int remain[MAXN];
    for (int i = 1; i <= n; i++) remain[i] = childCount[i];

    front = back = 0;
    queue[back++] = (NodeTime){1, 0};

    int answer = 0;

    while (front < back) {
        NodeTime cur = queue[front++];
        int v = cur.node;
        int t = cur.time;

        int sec = t;
        for (int i = 0; i < childCount[v]; i++) {
            sec++;
            queue[back++] = (NodeTime){children[v][i], sec};
            answer = max(answer, sec);
        }
    }

    return answer;
}

int main() {
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        for (int i = 1; i <= n; i++) childCount[i] = 0;

        for (int i = 2; i <= n; i++) {
            int parent;
            scanf("%d", &parent);
            children[parent][childCount[parent]++] = i;
        }

        printf("%d\n", solve());
    }
    return 0;
}

