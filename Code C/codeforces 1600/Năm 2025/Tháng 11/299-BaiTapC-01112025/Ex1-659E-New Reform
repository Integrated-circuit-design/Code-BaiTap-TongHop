#include <stdio.h>

#define MAXN 100005

int parent[MAXN];
int rank[MAXN];
int hasCycle[MAXN];

int find(int x) {
    if (parent[x] != x) parent[x] = find(parent[x]);
    return parent[x];
}

void unite(int x, int y) {
    int px = find(x);
    int py = find(y);
    if (px == py) {
        hasCycle[px] = 1;
        return;
    }
    if (rank[px] < rank[py]) {
        parent[px] = py;
        hasCycle[py] |= hasCycle[px];
    } else {
        parent[py] = px;
        hasCycle[px] |= hasCycle[py];
        if (rank[px] == rank[py]) rank[px]++;
    }
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);

    for (int i = 1; i <= n; i++) {
        parent[i] = i;
        rank[i] = 0;
        hasCycle[i] = 0;
    }

    for (int i = 0; i < m; i++) {
        int x, y;
        scanf("%d %d", &x, &y);
        unite(x, y);
    }

    int minSeparate = 0;
    for (int i = 1; i <= n; i++) {
        if (parent[i] == i && hasCycle[i] == 0) minSeparate++;
    }

    printf("%d\n", minSeparate);

    return 0;
}

