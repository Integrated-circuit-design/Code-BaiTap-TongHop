#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int value;
    struct Node* next;
} Node;

Node* createNode(int value) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->value = value;
    newNode->next = NULL;
    return newNode;
}

int exists(Node* head, int value) {
    Node* current = head;
    while (current != NULL) {
        if (current->value == value) {
            return 1;
        }
        current = current->next;
    }
    return 0;
}

void add(Node** head, int value) {
    Node* newNode = createNode(value);
    newNode->next = *head;
    *head = newNode;
}

int main() {
    int t;
    scanf("%d", &t);

    while (t--) {
        int n;
        scanf("%d", &n);
        int a[2 * n];
        Node* used = NULL;

        for (int i = 0; i < 2 * n; i++) {
            scanf("%d", &a[i]);
        }

        for (int i = 0; i < 2 * n; i++) {
            if (!exists(used, a[i])) {
                printf("%d ", a[i]);
                add(&used, a[i]);
            }
        }
        printf("\n");

        Node* current = used;
        while (current != NULL) {
            Node* temp = current;
            current = current->next;
            free(temp);
        }
    }

    return 0;
}

