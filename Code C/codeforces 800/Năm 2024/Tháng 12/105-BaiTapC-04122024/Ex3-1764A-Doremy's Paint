#include <stdio.h>
#include <stdlib.h>

#define MAX_N 100000

void solve() {
    int n;
    scanf("%d", &n);
    int a[n];
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    int last_occurrence[MAX_N + 1];
    for (int i = 0; i <= MAX_N; i++) {
        last_occurrence[i] = -1;
    }

    int best_l = 0, best_r = 0;
    int max_value = -MAX_N;
    int l = 0;

    for (int r = 0; r < n; r++) {
        last_occurrence[a[r]] = r;

        int distinct_count = 0;
        for (int i = 1; i <= n; i++) {
            if (last_occurrence[i] >= l && last_occurrence[i] <= r) {
                distinct_count++;
            }
        }

        int current_value = r - l - distinct_count;

        if (current_value > max_value) {
            max_value = current_value;
            best_l = l + 1;
            best_r = r + 1;
        }
    }

    printf("%d %d\n", best_l, best_r);
}

int main() {
    int t;
    scanf("%d", &t);
    
    for (int i = 0; i < t; i++) {
        solve();
    }
    
    return 0;
}

