#include <stdio.h>

void solve() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        
        char s[3 * n + 1];
        for (int i = 0; i < n; i++) {
            s[3 * i] = 'B';
            s[3 * i + 1] = 'A';
            s[3 * i + 2] = 'N';
        }
        s[3 * n] = '\0';
        
        int swaps[3 * n];
        int swap_count = 0;

        for (int i = 0; i < 3 * n; i++) {
            if (s[i] == 'B') {
                for (int j = i + 1; j < 3 * n; j++) {
                    if (s[j] == 'A') {
                        char temp = s[i];
                        s[i] = s[j];
                        s[j] = temp;
                        swaps[swap_count++] = i + 1;
                        swaps[swap_count++] = j + 1;
                        break;
                    }
                }
            }
            else if (s[i] == 'A') {
                for (int j = i + 1; j < 3 * n; j++) {
                    if (s[j] == 'N') {
                        char temp = s[i];
                        s[i] = s[j];
                        s[j] = temp;
                        swaps[swap_count++] = i + 1;
                        swaps[swap_count++] = j + 1;
                        break;
                    }
                }
            }
        }

        printf("%d\n", swap_count / 2);
        for (int i = 0; i < swap_count; i += 2) {
            printf("%d %d\n", swaps[i], swaps[i + 1]);
        }
    }
}

int main() {
    solve();
    return 0;
}

