#include <stdio.h>
#include <string.h>

#define MAX_N 300005

int is_all_removed(char s[], int n) {
    char stack[MAX_N];
    int top = -1;

    for (int i = 0; i < n; i++) {
        if (top >= 0 && stack[top] == s[i]) {
            top--;
        } else {
            stack[++top] = s[i];
        }

        if (top >= 2 && stack[top] == stack[top - 1] && stack[top - 1] == stack[top - 2]) {
            top -= 3;
        }
    }

    return top == -1;
}

int count_eliminating_insertions(char s[]) {
    int n = strlen(s);
    int total_ways = 0;

    for (int i = 0; i <= n; i++) {
        for (char color = 'A'; color <= 'Z'; color++) {
            char new_s[MAX_N];
            strncpy(new_s, s, i);
            new_s[i] = color;
            strcpy(new_s + i + 1, s + i);

            if (is_all_removed(new_s, n + 1)) {
                total_ways++;
            }
        }
    }

    return total_ways;
}

int main() {
    char s[MAX_N];
    scanf("%s", s);

    printf("%d\n", count_eliminating_insertions(s));

    return 0;
}

